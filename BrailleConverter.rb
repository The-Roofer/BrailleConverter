braille_alpha = {
  'A' => ["●○", "○○", "○○"],
  'B' => ["●○", "●○", "○○"],
  'C' => ["●●", "○○", "○○"],
  'D' => ["●●", "○●", "○○"],
  'E' => ["●○", "●○", "○○"],
  'F' => ["●●", "●○", "○○"],
  'G' => ["●●", "●●", "○○"],
  'H' => ["●○", "●●", "○○"],
  'I' => ["○●", "●○", "○○"],
  'J' => ["○●", "●●", "○○"],
  'K' => ["●○", "○○", "●○"],
  'L' => ["●○", "●○", "●○"],
  'M' => ["●●", "○○", "●○"],
  'N' => ["●●", "○●", "●○"],
  'O' => ["●○", "○●", "●○"],
  'P' => ["●●", "●○", "●○"],
  'Q' => ["●●", "●●", "●○"],
  'R' => ["●○", "●●", "●○"],
  'S' => ["○●", "●○", "●○"],
  'T' => ["○●", "●●", "●○"],
  'U' => ["●○", "○○", "●●"],
  'V' => ["●○", "●○", "●●"],
  'W' => ["○●", "●●", "○●"],
  'X' => ["●●", "○○", "●●"],
  'Y' => ["●●", "○●", "●●"],
  'Z' => ["●○", "○●", "●●"],
  ' ' => ["", "", ""]
}
puts "Enter a message"
message= gets.chomp.upcase

(0..3).each do |count|
  message.each_char.with_index do |char,index|
    print "#{braille_alpha[char][count]} "
    if index== message.size-1
      puts
      end
  end
end